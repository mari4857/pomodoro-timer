{"ast":null,"code":"var _jsxFileName = \"/Users/mariana/Desktop/Projects/thinkful-2021/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Timer.js\";\nimport React from \"react\";\n\nfunction Timer({\n  isTimerVisible,\n  isFocusTimer,\n  minutesToDuration,\n  focusDuration,\n  breakDuration,\n  showTimeRemaining,\n  isTimerRunning,\n  percentComplete\n}) {\n  const sessionDisplay = props.inSession || props.onBreak ? {\n    display: \"block\"\n  } : {\n    display: \"none\"\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: isTimerVisible ? \"block\" : \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, !isFocusTimer ? \"Focusing\" : \"On Break\", \" for\", \" \", !isFocusTimer ? minutesToDuration(focusDuration) : minutesToDuration(breakDuration), \" \", \"minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, showTimeRemaining(), \" remaining\"), !isTimerRunning ? /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 30\n    }\n  }, \"PAUSED\") : null)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": percentComplete // TODO: Increase aria-valuenow as elapsed time increases\n    ,\n    style: {\n      width: `${percentComplete}%`\n    } // TODO: Increase width % as elapsed time increases\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default Timer;","map":{"version":3,"sources":["/Users/mariana/Desktop/Projects/thinkful-2021/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Timer.js"],"names":["React","Timer","isTimerVisible","isFocusTimer","minutesToDuration","focusDuration","breakDuration","showTimeRemaining","isTimerRunning","percentComplete","sessionDisplay","props","inSession","onBreak","display","height","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,KAAT,CAAe;AACbC,EAAAA,cADa;AAEbC,EAAAA,YAFa;AAGbC,EAAAA,iBAHa;AAIbC,EAAAA,aAJa;AAKbC,EAAAA,aALa;AAMbC,EAAAA,iBANa;AAObC,EAAAA,cAPa;AAQbC,EAAAA;AARa,CAAf,EASG;AACD,QAAMC,cAAc,GAClBC,KAAK,CAACC,SAAN,IAAmBD,KAAK,CAACE,OAAzB,GACI;AAAEC,IAAAA,OAAO,EAAE;AAAX,GADJ,GAEI;AAAEA,IAAAA,OAAO,EAAE;AAAX,GAHN;AAKA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEA,MAAAA,OAAO,EAAEZ,cAAc,GAAG,OAAH,GAAa;AAAtC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAI,mBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACC,YAAD,GAAgB,UAAhB,GAA6B,UADhC,UACgD,GADhD,EAEG,CAACA,YAAD,GACGC,iBAAiB,CAACC,aAAD,CADpB,GAEGD,iBAAiB,CAACE,aAAD,CAJvB,EAIwC,GAJxC,YAFF,eAUE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,mBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,iBAAiB,EADpB,eAVF,EAaG,CAACC,cAAD,gBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAlB,GAAoC,IAbvC,CADF,CAFF,eAmBE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,KAAK,EAAE;AAAEO,MAAAA,MAAM,EAAE;AAAV,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,IAAI,EAAC,aAFP;AAGE,qBAAc,GAHhB;AAIE,qBAAc,KAJhB;AAKE,qBAAeN,eALjB,CAKkC;AALlC;AAME,IAAA,KAAK,EAAE;AAAEO,MAAAA,KAAK,EAAG,GAAEP,eAAgB;AAA5B,KANT,CAM2C;AAN3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CAnBF,CADF;AAoCD;;AAED,eAAeR,KAAf","sourcesContent":["import React from \"react\";\n\nfunction Timer({\n  isTimerVisible,\n  isFocusTimer,\n  minutesToDuration,\n  focusDuration,\n  breakDuration,\n  showTimeRemaining,\n  isTimerRunning,\n  percentComplete,\n}) {\n  const sessionDisplay =\n    props.inSession || props.onBreak\n      ? { display: \"block\" }\n      : { display: \"none\" };\n\n  return (\n    <div style={{ display: isTimerVisible ? \"block\" : \"none\" }}>\n      {/* TODO: This area should show only when a focus or break session is running or pauses */}\n      <div className=\"row mb-2\">\n        <div className=\"col\">\n          {/* TODO: Update message below to include current session (Focusing or On Break) and total duration */}\n          <h2 data-testid=\"session-title\">\n            {!isFocusTimer ? \"Focusing\" : \"On Break\"} for{\" \"}\n            {!isFocusTimer\n              ? minutesToDuration(focusDuration)\n              : minutesToDuration(breakDuration)}{\" \"}\n            minutes\n          </h2>\n          {/* TODO: Update message below to include time remaining in the current session */}\n          <p className=\"lead\" data-testid=\"session-sub-title\">\n            {showTimeRemaining()} remaining\n          </p>\n          {!isTimerRunning ? <h3>PAUSED</h3> : null}\n        </div>\n      </div>\n      <div className=\"row mb-2\">\n        <div className=\"col\">\n          <div className=\"progress\" style={{ height: \"20px\" }}>\n            <div\n              className=\"progress-bar\"\n              role=\"progressbar\"\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n              aria-valuenow={percentComplete} // TODO: Increase aria-valuenow as elapsed time increases\n              style={{ width: `${percentComplete}%` }} // TODO: Increase width % as elapsed time increases\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Timer;\n"]},"metadata":{},"sourceType":"module"}