{"ast":null,"code":"var _jsxFileName = \"/Users/mariana/Desktop/Projects/thinkful-2021/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js\";\nimport React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport { minutesToDuration } from \"../utils/duration\";\nimport { secondsToDuration } from \"../utils/duration\";\n\nfunction Pomodoro() {\n  const initialSessionState = {\n    label: \"\" // percentComplete: \"\",\n    // timeRemaining: \"\",\n    // minutesRemaining: 25,\n    // secondsRemaining: 60,\n\n  }; // Timer starts out paused\n\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [focusDuration, setFocusDuration] = useState(25);\n  const [breakDuration, setBreakDuration] = useState(5); // const [activeSession, setActiveSession] = useState(initialSessionState);\n\n  const [isFocusTimer, setIsFocusTimer] = useState(false);\n  const [isTimerVisible, setIsTimerVisible] = useState(false);\n  const [minutesRemaining, setMinutesRemaining] = useState(25);\n  const [secondsRemaining, setSecondsRemaining] = useState(0);\n\n  function toggleTimerType() {\n    setIsFocusTimer(prevState => !prevState);\n    console.log(isFocusTimer);\n\n    if (isFocusTimer === false) {\n      setMinutesRemaining(breakDuration);\n      setSecondsRemaining(0);\n    } else {\n      setMinutesRemaining(focusDuration);\n      setSecondsRemaining(0);\n    }\n  }\n\n  useInterval(() => {\n    // ToDo: Implement what should happen when the timer is running\n    const totalSeconds = focusDuration * 60;\n    const remainingTime = minutesRemaining * 60 + secondsRemaining;\n    const percentComplete = remainingTime / totalSeconds * 100;\n    console.log(percentComplete);\n\n    if (secondsRemaining > 0) {\n      setSecondsRemaining(secondsRemaining - 1);\n    } else if (minutesRemaining > 0 && secondsRemaining === 0) {\n      setMinutesRemaining(minutesRemaining - 1);\n      setSecondsRemaining(59);\n    } else if (minutesRemaining === 0 && secondsRemaining === 0) {\n      new Audio(`https://bigsoundbank.com/UPLOAD/mp3/1482.mp3`).play();\n      toggleTimerType(); // console.log(\"isFocusTimer:\", isFocusTimer);\n    }\n  }, isTimerRunning ? 1000 : null);\n\n  function showTimeRemaining() {\n    if (secondsRemaining > 0) {\n      return `${minutesRemaining}:${secondsRemaining}`;\n    } else {\n      return minutesToDuration(minutesRemaining);\n    }\n  }\n\n  function stopSession() {\n    setIsTimerVisible(false);\n    setIsTimerRunning(false);\n    setIsFocusTimer(false);\n    setFocusDuration(25);\n    setMinutesRemaining(25);\n    setSecondsRemaining(0);\n  }\n\n  function playPause() {\n    setIsTimerVisible(true);\n    setIsTimerRunning(prevState => !prevState);\n  }\n\n  function decreaseFocusDuration() {\n    const duration = Math.max(focusDuration - 5, 5);\n    setFocusDuration(duration);\n    setMinutesRemaining(duration);\n    setSecondsRemaining(0);\n  }\n\n  function increaseFocusDuration() {\n    const duration = Math.min(focusDuration + 5, 60);\n    setFocusDuration(duration);\n    setMinutesRemaining(duration);\n    setSecondsRemaining(0);\n  }\n\n  function decreaseBreakDuration() {\n    const duration = Math.max(breakDuration - 1, 1);\n    setBreakDuration(duration); // setMinutesRemaining(duration);\n    // setSecondsRemaining(0);\n  }\n\n  function increaseBreakDuration() {\n    const duration = Math.min(breakDuration + 1, 15);\n    setBreakDuration(duration); // setMinutesRemaining(duration);\n    // setSecondsRemaining(0);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-focus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, \"Focus Duration: \", minutesToDuration(focusDuration)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"decrease-focus\",\n    disabled: isTimerRunning,\n    onClick: decreaseFocusDuration,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"increase-focus\",\n    disabled: isTimerRunning,\n    onClick: increaseFocusDuration,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-break\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 15\n    }\n  }, \"Break Duration: \", minutesToDuration(breakDuration)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"decrease-break\",\n    disabled: isTimerRunning,\n    onClick: decreaseBreakDuration,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"increase-break\",\n    disabled: isTimerRunning,\n    onClick: increaseBreakDuration,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 19\n    }\n  }))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group btn-group-lg mb-2\",\n    role: \"group\",\n    \"aria-label\": \"Timer controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    \"data-testid\": \"play-pause\",\n    title: \"Start or pause timer\",\n    onClick: playPause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames({\n      oi: true,\n      \"oi-media-play\": !isTimerRunning,\n      \"oi-media-pause\": isTimerRunning\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    title: \"Stop the session\",\n    disabled: !isTimerRunning,\n    onClick: stopSession,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-media-stop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: isTimerVisible ? \"block\" : \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }\n  }, !isFocusTimer ? \"Focusing\" : \"On Break\", \" for\", \" \", !isFocusTimer ? minutesToDuration(focusDuration) : minutesToDuration(breakDuration), \" \", \"minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }\n  }, showTimeRemaining(), \" remaining\"), !isTimerRunning ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 17\n    }\n  }, \"PAUSED\")) : null)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": \"0\" // TODO: Increase aria-valuenow as elapsed time increases\n    ,\n    style: {\n      width: \"0%\"\n    } // TODO: Increase width % as elapsed time increases\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 15\n    }\n  }))))));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["/Users/mariana/Desktop/Projects/thinkful-2021/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useState","classNames","useInterval","minutesToDuration","secondsToDuration","Pomodoro","initialSessionState","label","isTimerRunning","setIsTimerRunning","focusDuration","setFocusDuration","breakDuration","setBreakDuration","isFocusTimer","setIsFocusTimer","isTimerVisible","setIsTimerVisible","minutesRemaining","setMinutesRemaining","secondsRemaining","setSecondsRemaining","toggleTimerType","prevState","console","log","totalSeconds","remainingTime","percentComplete","Audio","play","showTimeRemaining","stopSession","playPause","decreaseFocusDuration","duration","Math","max","increaseFocusDuration","min","decreaseBreakDuration","increaseBreakDuration","oi","display","height","width"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport { minutesToDuration } from \"../utils/duration\";\nimport { secondsToDuration } from \"../utils/duration\";\n\nfunction Pomodoro() {\n  const initialSessionState = {\n    label: \"\",\n    // percentComplete: \"\",\n    // timeRemaining: \"\",\n    // minutesRemaining: 25,\n    // secondsRemaining: 60,\n  };\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [focusDuration, setFocusDuration] = useState(25);\n  const [breakDuration, setBreakDuration] = useState(5);\n  // const [activeSession, setActiveSession] = useState(initialSessionState);\n  const [isFocusTimer, setIsFocusTimer] = useState(false);\n  const [isTimerVisible, setIsTimerVisible] = useState(false);\n  const [minutesRemaining, setMinutesRemaining] = useState(25);\n  const [secondsRemaining, setSecondsRemaining] = useState(0);\n\n  function toggleTimerType() {\n    setIsFocusTimer((prevState) => !prevState);\n    console.log(isFocusTimer);\n    if (isFocusTimer === false) {\n      setMinutesRemaining(breakDuration);\n      setSecondsRemaining(0);\n    } else {\n      setMinutesRemaining(focusDuration);\n      setSecondsRemaining(0);\n    }\n  }\n\n  useInterval(\n    () => {\n      // ToDo: Implement what should happen when the timer is running\n\n      const totalSeconds = focusDuration * 60;\n      const remainingTime = minutesRemaining * 60 + secondsRemaining;\n      const percentComplete = (remainingTime / totalSeconds) * 100;\n      console.log(percentComplete);\n\n      if (secondsRemaining > 0) {\n        setSecondsRemaining(secondsRemaining - 1);\n      } else if (minutesRemaining > 0 && secondsRemaining === 0) {\n        setMinutesRemaining(minutesRemaining - 1);\n        setSecondsRemaining(59);\n      } else if (minutesRemaining === 0 && secondsRemaining === 0) {\n        new Audio(`https://bigsoundbank.com/UPLOAD/mp3/1482.mp3`).play();\n        toggleTimerType();\n        // console.log(\"isFocusTimer:\", isFocusTimer);\n      }\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  function showTimeRemaining() {\n    if (secondsRemaining > 0) {\n      return `${minutesRemaining}:${secondsRemaining}`;\n    } else {\n      return minutesToDuration(minutesRemaining);\n    }\n  }\n\n  function stopSession() {\n    setIsTimerVisible(false);\n    setIsTimerRunning(false);\n    setIsFocusTimer(false);\n    setFocusDuration(25);\n    setMinutesRemaining(25);\n    setSecondsRemaining(0);\n  }\n\n  function playPause() {\n    setIsTimerVisible(true);\n    setIsTimerRunning((prevState) => !prevState);\n  }\n\n  function decreaseFocusDuration() {\n    const duration = Math.max(focusDuration - 5, 5);\n    setFocusDuration(duration);\n    setMinutesRemaining(duration);\n    setSecondsRemaining(0);\n  }\n\n  function increaseFocusDuration() {\n    const duration = Math.min(focusDuration + 5, 60);\n    setFocusDuration(duration);\n    setMinutesRemaining(duration);\n    setSecondsRemaining(0);\n  }\n\n  function decreaseBreakDuration() {\n    const duration = Math.max(breakDuration - 1, 1);\n    setBreakDuration(duration);\n    // setMinutesRemaining(duration);\n    // setSecondsRemaining(0);\n  }\n\n  function increaseBreakDuration() {\n    const duration = Math.min(breakDuration + 1, 15);\n    setBreakDuration(duration);\n    // setMinutesRemaining(duration);\n    // setSecondsRemaining(0);\n  }\n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"input-group input-group-lg mb-2\">\n            <span className=\"input-group-text\" data-testid=\"duration-focus\">\n              {/* TODO: Update this text to display the current focus session duration */}\n              Focus Duration: {minutesToDuration(focusDuration)}\n            </span>\n            <div className=\"input-group-append\">\n              {/* TODO: Implement decreasing focus duration and disable during a focus or break session */}\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"decrease-focus\"\n                disabled={isTimerRunning}\n                onClick={decreaseFocusDuration}\n              >\n                <span className=\"oi oi-minus\" />\n              </button>\n              {/* TODO: Implement increasing focus duration  and disable during a focus or break session */}\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"increase-focus\"\n                disabled={isTimerRunning}\n                onClick={increaseFocusDuration}\n              >\n                <span className=\"oi oi-plus\" />\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"col\">\n          <div className=\"float-right\">\n            <div className=\"input-group input-group-lg mb-2\">\n              <span className=\"input-group-text\" data-testid=\"duration-break\">\n                {/* TODO: Update this text to display the current break session duration */}\n                Break Duration: {minutesToDuration(breakDuration)}\n              </span>\n              <div className=\"input-group-append\">\n                {/* TODO: Implement decreasing break duration and disable during a focus or break session*/}\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"decrease-break\"\n                  disabled={isTimerRunning}\n                  onClick={decreaseBreakDuration}\n                >\n                  <span className=\"oi oi-minus\" />\n                </button>\n                {/* TODO: Implement increasing break duration and disable during a focus or break session*/}\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"increase-break\"\n                  disabled={isTimerRunning}\n                  onClick={increaseBreakDuration}\n                >\n                  <span className=\"oi oi-plus\" />\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <div\n            className=\"btn-group btn-group-lg mb-2\"\n            role=\"group\"\n            aria-label=\"Timer controls\"\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              data-testid=\"play-pause\"\n              title=\"Start or pause timer\"\n              onClick={playPause}\n            >\n              <span\n                className={classNames({\n                  oi: true,\n                  \"oi-media-play\": !isTimerRunning,\n                  \"oi-media-pause\": isTimerRunning,\n                })}\n              />\n            </button>\n            {/* TODO: Implement stopping the current focus or break session and disable when there is no active session */}\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              title=\"Stop the session\"\n              disabled={!isTimerRunning}\n              onClick={stopSession}\n            >\n              <span className=\"oi oi-media-stop\" />\n            </button>\n          </div>\n        </div>\n      </div>\n      <div style={{ display: isTimerVisible ? \"block\" : \"none\" }}>\n        {/* TODO: This area should show only when a focus or break session is running or pauses */}\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            {/* TODO: Update message below to include current session (Focusing or On Break) and total duration */}\n            <h2 data-testid=\"session-title\">\n              {!isFocusTimer ? \"Focusing\" : \"On Break\"} for{\" \"}\n              {!isFocusTimer\n                ? minutesToDuration(focusDuration)\n                : minutesToDuration(breakDuration)}{\" \"}\n              minutes\n            </h2>\n            {/* TODO: Update message below to include time remaining in the current session */}\n            <p className=\"lead\" data-testid=\"session-sub-title\">\n              {showTimeRemaining()} remaining\n            </p>\n            {!isTimerRunning ? (\n              <p>\n                <strong>PAUSED</strong>\n              </p>\n            ) : null}\n          </div>\n        </div>\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            <div className=\"progress\" style={{ height: \"20px\" }}>\n              <div\n                className=\"progress-bar\"\n                role=\"progressbar\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                aria-valuenow=\"0\" // TODO: Increase aria-valuenow as elapsed time increases\n                style={{ width: \"0%\" }} // TODO: Increase width % as elapsed time increases\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}