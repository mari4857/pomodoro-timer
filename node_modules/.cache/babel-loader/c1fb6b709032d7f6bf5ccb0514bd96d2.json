{"ast":null,"code":"import _slicedToArray from\"/Users/mariana/Desktop/Projects/thinkful-2021/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import useInterval from\"../utils/useInterval\";import{minutesToDuration}from\"../utils/duration\";import Timer from\"./Timer\";import PlayPause from\"./PlayPause\";import FocusDuration from\"./FocusDuration\";import BreakDuration from\"./BreakDuration\";function Pomodoro(){// Timer starts out paused\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),isTimerRunning=_useState2[0],setIsTimerRunning=_useState2[1];var _useState3=useState(25),_useState4=_slicedToArray(_useState3,2),focusDuration=_useState4[0],setFocusDuration=_useState4[1];var _useState5=useState(5),_useState6=_slicedToArray(_useState5,2),breakDuration=_useState6[0],setBreakDuration=_useState6[1];// const [activeSession, setActiveSession] = useState(initialSessionState);\nvar _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isFocusTimer=_useState8[0],setIsFocusTimer=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),isTimerVisible=_useState10[0],setIsTimerVisible=_useState10[1];var _useState11=useState(25),_useState12=_slicedToArray(_useState11,2),minutesRemaining=_useState12[0],setMinutesRemaining=_useState12[1];var _useState13=useState(0),_useState14=_slicedToArray(_useState13,2),secondsRemaining=_useState14[0],setSecondsRemaining=_useState14[1];var _useState15=useState(0),_useState16=_slicedToArray(_useState15,2),percentComplete=_useState16[0],setPercentComplete=_useState16[1];function toggleTimerType(){setIsFocusTimer(function(prevState){return!prevState;});if(isFocusTimer===false){setMinutesRemaining(breakDuration);setSecondsRemaining(0);}else{setMinutesRemaining(focusDuration);setSecondsRemaining(0);}}useInterval(function(){// ToDo: Implement what should happen when the timer is running\nupdatePercentComplete();if(secondsRemaining>0){setSecondsRemaining(secondsRemaining-1);}else if(minutesRemaining>0&&secondsRemaining===0){setMinutesRemaining(minutesRemaining-1);setSecondsRemaining(59);}else if(minutesRemaining===0&&secondsRemaining===0){new Audio(\"https://bigsoundbank.com/UPLOAD/mp3/1482.mp3\").play();toggleTimerType();}},isTimerRunning?1000:null);function updatePercentComplete(){var totalSeconds;if(isFocusTimer===false){totalSeconds=focusDuration*60;}else{totalSeconds=breakDuration*60;}var remainingTime=totalSeconds-(minutesRemaining*60+secondsRemaining);var percentComplete=remainingTime/totalSeconds*100;setPercentComplete(percentComplete);}function showTimeRemaining(){if(secondsRemaining>0&&secondsRemaining>10){return\"\".concat(minutesRemaining,\":\").concat(secondsRemaining);}else if(secondsRemaining>0&&secondsRemaining<=9){return\"\".concat(minutesRemaining,\":0\").concat(secondsRemaining);}else{return minutesToDuration(minutesRemaining);}}function stopSession(){setIsTimerVisible(false);setIsTimerRunning(false);setIsFocusTimer(false);setFocusDuration(25);setMinutesRemaining(25);setSecondsRemaining(0);}function playPause(){setIsTimerVisible(true);setIsTimerRunning(function(prevState){return!prevState;});}function decreaseFocusDuration(){var duration=Math.max(focusDuration-5,5);setFocusDuration(duration);setMinutesRemaining(duration);setSecondsRemaining(0);}function increaseFocusDuration(){var duration=Math.min(focusDuration+5,60);setFocusDuration(duration);setMinutesRemaining(duration);setSecondsRemaining(0);}function decreaseBreakDuration(){var duration=Math.max(breakDuration-1,1);setBreakDuration(duration);}function increaseBreakDuration(){var duration=Math.min(breakDuration+1,15);setBreakDuration(duration);}return/*#__PURE__*/React.createElement(\"div\",{className:\"pomodoro\"},/*#__PURE__*/React.createElement(\"div\",{className:\"row mb-5\"},/*#__PURE__*/React.createElement(FocusDuration,{focusDuration:focusDuration,isTimerRunning:isTimerRunning,decreaseFocusDuration:decreaseFocusDuration,increaseFocusDuration:increaseFocusDuration}),/*#__PURE__*/React.createElement(BreakDuration,{breakDuration:breakDuration,isTimerRunning:isTimerRunning,decreaseBreakDuration:decreaseBreakDuration,increaseBreakDuration:increaseBreakDuration})),/*#__PURE__*/React.createElement(PlayPause,{playPause:playPause,isTimerRunning:isTimerRunning,stopSession:stopSession}),/*#__PURE__*/React.createElement(Timer,{isTimerVisible:isTimerVisible,isFocusTimer:isFocusTimer,minutesToDuration:minutesToDuration,focusDuration:focusDuration,breakDuration:breakDuration,showTimeRemaining:showTimeRemaining,isTimerRunning:isTimerRunning,percentComplete:percentComplete}));}export default Pomodoro;","map":{"version":3,"sources":["/Users/mariana/Desktop/Projects/thinkful-2021/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useState","useInterval","minutesToDuration","Timer","PlayPause","FocusDuration","BreakDuration","Pomodoro","isTimerRunning","setIsTimerRunning","focusDuration","setFocusDuration","breakDuration","setBreakDuration","isFocusTimer","setIsFocusTimer","isTimerVisible","setIsTimerVisible","minutesRemaining","setMinutesRemaining","secondsRemaining","setSecondsRemaining","percentComplete","setPercentComplete","toggleTimerType","prevState","updatePercentComplete","Audio","play","totalSeconds","remainingTime","showTimeRemaining","stopSession","playPause","decreaseFocusDuration","duration","Math","max","increaseFocusDuration","min","decreaseBreakDuration","increaseBreakDuration"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport useInterval from \"../utils/useInterval\";\nimport { minutesToDuration } from \"../utils/duration\";\nimport Timer from \"./Timer\";\nimport PlayPause from \"./PlayPause\";\nimport FocusDuration from \"./FocusDuration\";\nimport BreakDuration from \"./BreakDuration\";\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [focusDuration, setFocusDuration] = useState(25);\n  const [breakDuration, setBreakDuration] = useState(5);\n  // const [activeSession, setActiveSession] = useState(initialSessionState);\n  const [isFocusTimer, setIsFocusTimer] = useState(false);\n  const [isTimerVisible, setIsTimerVisible] = useState(false);\n  const [minutesRemaining, setMinutesRemaining] = useState(25);\n  const [secondsRemaining, setSecondsRemaining] = useState(0);\n  const [percentComplete, setPercentComplete] = useState(0);\n\n  function toggleTimerType() {\n    setIsFocusTimer((prevState) => !prevState);\n    if (isFocusTimer === false) {\n      setMinutesRemaining(breakDuration);\n      setSecondsRemaining(0);\n    } else {\n      setMinutesRemaining(focusDuration);\n      setSecondsRemaining(0);\n    }\n  }\n\n  useInterval(\n    () => {\n      // ToDo: Implement what should happen when the timer is running\n      updatePercentComplete();\n      if (secondsRemaining > 0) {\n        setSecondsRemaining(secondsRemaining - 1);\n      } else if (minutesRemaining > 0 && secondsRemaining === 0) {\n        setMinutesRemaining(minutesRemaining - 1);\n        setSecondsRemaining(59);\n      } else if (minutesRemaining === 0 && secondsRemaining === 0) {\n        new Audio(`https://bigsoundbank.com/UPLOAD/mp3/1482.mp3`).play();\n        toggleTimerType();\n      }\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  function updatePercentComplete() {\n    let totalSeconds;\n    if (isFocusTimer === false) {\n      totalSeconds = focusDuration * 60;\n    } else {\n      totalSeconds = breakDuration * 60;\n    }\n    const remainingTime =\n      totalSeconds - (minutesRemaining * 60 + secondsRemaining);\n    const percentComplete = (remainingTime / totalSeconds) * 100;\n    setPercentComplete(percentComplete);\n  }\n\n  function showTimeRemaining() {\n    if (secondsRemaining > 0 && secondsRemaining > 10) {\n      return `${minutesRemaining}:${secondsRemaining}`;\n    } else if (secondsRemaining > 0 && secondsRemaining <= 9) {\n      return `${minutesRemaining}:0${secondsRemaining}`;\n    } else {\n      return minutesToDuration(minutesRemaining);\n    }\n  }\n\n  function stopSession() {\n    setIsTimerVisible(false);\n    setIsTimerRunning(false);\n    setIsFocusTimer(false);\n    setFocusDuration(25);\n    setMinutesRemaining(25);\n    setSecondsRemaining(0);\n  }\n\n  function playPause() {\n    setIsTimerVisible(true);\n    setIsTimerRunning((prevState) => !prevState);\n  }\n\n  function decreaseFocusDuration() {\n    const duration = Math.max(focusDuration - 5, 5);\n    setFocusDuration(duration);\n    setMinutesRemaining(duration);\n    setSecondsRemaining(0);\n  }\n\n  function increaseFocusDuration() {\n    const duration = Math.min(focusDuration + 5, 60);\n    setFocusDuration(duration);\n    setMinutesRemaining(duration);\n    setSecondsRemaining(0);\n  }\n\n  function decreaseBreakDuration() {\n    const duration = Math.max(breakDuration - 1, 1);\n    setBreakDuration(duration);\n  }\n\n  function increaseBreakDuration() {\n    const duration = Math.min(breakDuration + 1, 15);\n    setBreakDuration(duration);\n  }\n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row mb-5\">\n        <FocusDuration\n          focusDuration={focusDuration}\n          isTimerRunning={isTimerRunning}\n          decreaseFocusDuration={decreaseFocusDuration}\n          increaseFocusDuration={increaseFocusDuration}\n        />\n        <BreakDuration\n          breakDuration={breakDuration}\n          isTimerRunning={isTimerRunning}\n          decreaseBreakDuration={decreaseBreakDuration}\n          increaseBreakDuration={increaseBreakDuration}\n        />\n      </div>\n      <PlayPause\n        playPause={playPause}\n        isTimerRunning={isTimerRunning}\n        stopSession={stopSession}\n      />\n      <Timer\n        isTimerVisible={isTimerVisible}\n        isFocusTimer={isFocusTimer}\n        minutesToDuration={minutesToDuration}\n        focusDuration={focusDuration}\n        breakDuration={breakDuration}\n        showTimeRemaining={showTimeRemaining}\n        isTimerRunning={isTimerRunning}\n        percentComplete={percentComplete}\n      />\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}